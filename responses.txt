NAME: Jann Arellano
1. Run arraySumLooped and arraySum a few times with whatever data file you would like. 
    a. What output stays the same? 
    Total value

    b. What output changes even when the same program is run with the same data? Why does that happen?
    Time taken because the speed of execution varies.

2. Run arraySumLooped with the ten_values.txt file. 
    a. Do you get the same sum when you run arraySum with ten_values.txt and no lock?
    yes.

    b. Do you get the same sum when you run arraySum with ten_values.txt and a lock?
    yes.

    c. How does the run time (in ms) of arraySumLooped and arraySum (locked AND not locked) compare?
    it is a lot faster by around 200x


    d. Why is the total time to calculate the sum for the  three cases different? Were they what you expected? Why or why not?
    The mutexes and synchronous behavior. I expected this because it doesn't have to wait for resources and other stuff for the synchronous one but the mutexes have to wait etc.

3.  Run arraySumLooped with the oneThousandValues.txt file. 
    a. Do you get the same sum when you run arraySum with oneThousandValues.txt and no lock?
    Yes

    b. Do you get the same sum when you run arraySum with oneThousandValues.txt and a lock?
    Yes

    b. How does the run time (in ms) of arraySumLooped and arraySum compare?
    it is a lot faster by around 200x

    c. Why is the total time to calculate the sum for the two programs different? Were they what you expected? Why or why not?
    Same reason as above. The mutexes and synchronous behavior. I expected this because it doesn't have to wait for resources and other stuff for the synchronous one but the mutexes have to wait etc.

4. Does the use of a lock in a threaded program have any impact on performance? How does the number of threads and the amount of data affect the performance of the threaded program with and without locks?
    seemingly no. the lock seems to be more consistent over 2 runs but that may just be error on my end. the more threads seem to be more time. there might be an error with how im joining the threads though? locks dont seem to have an effect on the speed

5. Is the lock necessary to compute consistent values every time the program is run? Why or why not? Why do you think that occurs? You should run the program with and without a lock and with a few different data files to get the full picture.
    the lock is necessary to compute decently consistent values but it's not always consistent. i have no idea why it's not always consistent but it's probably a problem with my processor and WSL. 
